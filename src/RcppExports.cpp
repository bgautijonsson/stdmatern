// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// make_AR_prec_matrix
Eigen::SparseMatrix<double> make_AR_prec_matrix(int dim, double rho);
RcppExport SEXP _stdmatern_make_AR_prec_matrix(SEXP dimSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(make_AR_prec_matrix(dim, rho));
    return rcpp_result_gen;
END_RCPP
}
// marginal_sd_eigen
Eigen::VectorXd marginal_sd_eigen(const Eigen::VectorXd& A1, const Eigen::MatrixXd& V1, int dim, int nu);
RcppExport SEXP _stdmatern_marginal_sd_eigen(SEXP A1SEXP, SEXP V1SEXP, SEXP dimSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type A1(A1SEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type V1(V1SEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(marginal_sd_eigen(A1, V1, dim, nu));
    return rcpp_result_gen;
END_RCPP
}
// make_standardized_matern_eigen
Eigen::SparseMatrix<double> make_standardized_matern_eigen(int dim, double rho, int nu);
RcppExport SEXP _stdmatern_make_standardized_matern_eigen(SEXP dimSEXP, SEXP rhoSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(make_standardized_matern_eigen(dim, rho, nu));
    return rcpp_result_gen;
END_RCPP
}
// matern_mvn_density_eigen
Eigen::VectorXd matern_mvn_density_eigen(const Eigen::MatrixXd& X, int dim, double rho, int nu);
RcppExport SEXP _stdmatern_matern_mvn_density_eigen(SEXP XSEXP, SEXP dimSEXP, SEXP rhoSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_mvn_density_eigen(X, dim, rho, nu));
    return rcpp_result_gen;
END_RCPP
}
// matern_mvn_density_eigen_whitened
Eigen::VectorXd matern_mvn_density_eigen_whitened(const Eigen::MatrixXd& X, int dim, double rho, int nu);
RcppExport SEXP _stdmatern_matern_mvn_density_eigen_whitened(SEXP XSEXP, SEXP dimSEXP, SEXP rhoSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_mvn_density_eigen_whitened(X, dim, rho, nu));
    return rcpp_result_gen;
END_RCPP
}
// sample_standardized_matern
Eigen::MatrixXd sample_standardized_matern(int dim, double rho, int nu, int n_samples);
RcppExport SEXP _stdmatern_sample_standardized_matern(SEXP dimSEXP, SEXP rhoSEXP, SEXP nuSEXP, SEXP n_samplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< int >::type n_samples(n_samplesSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_standardized_matern(dim, rho, nu, n_samples));
    return rcpp_result_gen;
END_RCPP
}
// make_matern_prec_matrix
Eigen::SparseMatrix<double> make_matern_prec_matrix(int dim, double rho, int nu);
RcppExport SEXP _stdmatern_make_matern_prec_matrix(SEXP dimSEXP, SEXP rhoSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(make_matern_prec_matrix(dim, rho, nu));
    return rcpp_result_gen;
END_RCPP
}
// marginal_sd_cholesky
Eigen::SparseMatrix<double> marginal_sd_cholesky(const Eigen::SparseMatrix<double>& Q);
RcppExport SEXP _stdmatern_marginal_sd_cholesky(SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type Q(QSEXP);
    rcpp_result_gen = Rcpp::wrap(marginal_sd_cholesky(Q));
    return rcpp_result_gen;
END_RCPP
}
// make_standardized_matern_cholesky
Eigen::SparseMatrix<double> make_standardized_matern_cholesky(int dim, double rho, int nu);
RcppExport SEXP _stdmatern_make_standardized_matern_cholesky(SEXP dimSEXP, SEXP rhoSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(make_standardized_matern_cholesky(dim, rho, nu));
    return rcpp_result_gen;
END_RCPP
}
// matern_mvn_density_cholesky
Eigen::VectorXd matern_mvn_density_cholesky(const Eigen::MatrixXd& X, int dim, double rho, int nu);
RcppExport SEXP _stdmatern_matern_mvn_density_cholesky(SEXP XSEXP, SEXP dimSEXP, SEXP rhoSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_mvn_density_cholesky(X, dim, rho, nu));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_stdmatern_make_AR_prec_matrix", (DL_FUNC) &_stdmatern_make_AR_prec_matrix, 2},
    {"_stdmatern_marginal_sd_eigen", (DL_FUNC) &_stdmatern_marginal_sd_eigen, 4},
    {"_stdmatern_make_standardized_matern_eigen", (DL_FUNC) &_stdmatern_make_standardized_matern_eigen, 3},
    {"_stdmatern_matern_mvn_density_eigen", (DL_FUNC) &_stdmatern_matern_mvn_density_eigen, 4},
    {"_stdmatern_matern_mvn_density_eigen_whitened", (DL_FUNC) &_stdmatern_matern_mvn_density_eigen_whitened, 4},
    {"_stdmatern_sample_standardized_matern", (DL_FUNC) &_stdmatern_sample_standardized_matern, 4},
    {"_stdmatern_make_matern_prec_matrix", (DL_FUNC) &_stdmatern_make_matern_prec_matrix, 3},
    {"_stdmatern_marginal_sd_cholesky", (DL_FUNC) &_stdmatern_marginal_sd_cholesky, 1},
    {"_stdmatern_make_standardized_matern_cholesky", (DL_FUNC) &_stdmatern_make_standardized_matern_cholesky, 3},
    {"_stdmatern_matern_mvn_density_cholesky", (DL_FUNC) &_stdmatern_matern_mvn_density_cholesky, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_stdmatern(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
